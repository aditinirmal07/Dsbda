# -*- coding: utf-8 -*-
"""
Created on Mon Apr 17 21:35:05 2023

@author: Lenovo
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
data= pd.read_csv("C:\\Users\\Lenovo\\Documents\\dataset\\Social_Network_Ads.csv")
print (data)

x = data.iloc[:,[2,3]].values
print(x)

y = data.iloc[:,4].values
print(y)

#splitting the dataaset into train and test
xtrain, xtest,ytrain, ytest = train_test_split(x ,y , test_size=0.25 , random_state=0)
from sklearn.preprocessing import StandardScaler
sc_x = StandardScaler()
xtrain = sc_x.fit_transform(xtrain)
xtext = sc_x.transform(xtest)
print(xtrain[0:10, :])
#train the model
classifier = LogisticRegression(random_state=0)
classifier.fit(xtrain , ytrain)
y_pred = classifier.predict(xtest)

#Evaluation metrics
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(ytest, y_pred)
print("Confusion matrix"\n, cm)

from sklearn.metrics import accuracy_score
print("Accuracy:", accuracy_score(ytest , y_pred))

from matplotlib.colors import ListedColormap

x_test , y_test= xtest, ytest 
x1 , x2 = np.meshgrid(np.arrange(start= x_set[:,0]. min()-1,
stop = x_set[:,0].max()+1 , step = 0.01), np.arrange(start = x_set[:,1].min()-1 , stop= x_set[:,1].max(+1,step = 0.01))
